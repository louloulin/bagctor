{
  "name": "@bactor/agent",
  "version": "0.1.0",
  "description": "Bactor Agent System - AI Agent framework based on Mastra",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "scripts": {
    "build": "rimraf dist tsconfig.tsbuildinfo && bun run build:tsc && bun run build:bundle",
    "dev": "bun run --watch src/index.ts",
    "test": "NODE_OPTIONS=--experimental-vm-modules jest",
    "lint": "eslint .",
    "test:llm": "NODE_OPTIONS=--experimental-vm-modules bun test src/tests/llm_*.test.ts",
    "test:watch": "NODE_OPTIONS=--experimental-vm-modules bun test --watch",
    "clean": "rimraf dist tsconfig.tsbuildinfo",
    "example:agent": "bun run src/examples/agent_demo.ts",
    "example:bus": "bun run src/examples/bus_message_demo.ts",
    "example:llm": "bun run src/examples/llm_demo.ts",
    "build:tsc": "tsc",
    "build:bundle": "bun build src/index.ts --outdir=dist --target=node --format=cjs --outfile=dist/index.cjs --external uuid && bun run build:sub-modules",
    "build:sub-modules": "bun build src/relevance/index.ts --outdir=dist/relevance --target=node --format=esm && cp dist/relevance/index.js dist/relevance/index.cjs && bun build src/vector/index.ts --outdir=dist/vector --target=node --format=esm && cp dist/vector/index.js dist/vector/index.cjs && bun build src/vector/filter/index.ts --outdir=dist/vector/filter --target=node --format=esm && cp dist/vector/filter/index.js dist/vector/filter/index.cjs && bun build src/tools/index.ts --outdir=dist/tools --target=node --format=esm && cp dist/tools/index.js dist/tools/index.cjs && bun build src/utils.ts --outdir=dist --target=node --format=esm && cp dist/utils.js dist/utils.cjs && bun build src/memory/index.ts --outdir=dist/memory --target=node --format=esm && cp dist/memory/index.js dist/memory/index.cjs && bun build src/storage/index.ts --outdir=dist/storage --target=node --format=esm && cp dist/storage/index.js dist/storage/index.cjs"
  },
  "dependencies": {
    "nanoid": "^5.0.4",
    "openai": "^4.24.1",
    "@bactor/core": "workspace:*",
    "qwen-ai-provider": "^0.1.0",
    "@libsql/client": "^0.14.0",
    "@opentelemetry/api": "^1.9.0",
    "@opentelemetry/auto-instrumentations-node": "^0.53.0",
    "@opentelemetry/core": "^1.30.1",
    "@opentelemetry/exporter-trace-otlp-http": "^0.55.0",
    "@opentelemetry/otlp-exporter-base": "^0.57.1",
    "@opentelemetry/otlp-transformer": "^0.57.1",
    "@opentelemetry/resources": "^1.28.0",
    "@opentelemetry/sdk-metrics": "^1.28.0",
    "@opentelemetry/sdk-node": "^0.55.0",
    "@opentelemetry/sdk-trace-base": "^1.30.1",
    "@opentelemetry/sdk-trace-node": "^1.28.0",
    "@opentelemetry/semantic-conventions": "^1.28.0",
    "ai": "^4.1.41",
    "cohere-ai": "^7.15.4",
    "date-fns": "^3.0.5",
    "dotenv": "^16.4.7",
    "fastembed": "^1.14.1",
    "json-schema": "^0.4.0",
    "node_modules-path": "^2.0.8",
    "pino": "^9.6.0",
    "pino-pretty": "^13.0.0",
    "radash": "^12.1.0",
    "sift": "^17.1.3",
    "xstate": "^5.19.0",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@types/jest": "^29.5.11",
    "jest": "^29.7.0",
    "ts-jest": "^29.1.1",
    "bun-types": "latest",
    "rimraf": "^5.0.0",
    "@ai-sdk/openai": "^1.1.12",
    "@microsoft/api-extractor": "^7.49.2",
    "@size-limit/preset-small-lib": "^11.1.4",
    "@types/babel__core": "^7.20.5",
    "@types/json-schema": "^7.0.15",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^22.13.1",
    "@types/pino": "^7.0.5",
    "@types/qs": "^6.9.15",
    "eslint": "^9.20.1",
    "rollup": "^4.30.1",
    "size-limit": "^11.1.4",
    "tsup": "^8.3.6",
    "typescript": "^5.7.3",
    "vitest": "^3.0.4"
  },
  "engines": {
    "node": ">=18",
    "bun": ">=1.0.0"
  },
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.cjs",
      "types": "./dist/index.d.ts"
    },
    "./relevance": {
      "import": "./dist/relevance/index.js",
      "require": "./dist/relevance/index.cjs",
      "types": "./dist/relevance/index.d.ts"
    },
    "./vector": {
      "import": "./dist/vector/index.js",
      "require": "./dist/vector/index.cjs",
      "types": "./dist/vector/index.d.ts"
    },
    "./vector/filter": {
      "import": "./dist/vector/filter/index.js",
      "require": "./dist/vector/filter/index.cjs",
      "types": "./dist/vector/filter/index.d.ts"
    },
    "./tools": {
      "import": "./dist/tools/index.js",
      "require": "./dist/tools/index.cjs",
      "types": "./dist/tools/index.d.ts"
    },
    "./utils": {
      "import": "./dist/utils.js",
      "require": "./dist/utils.cjs",
      "types": "./dist/utils.d.ts"
    },
    "./memory": {
      "import": "./dist/memory/index.js",
      "require": "./dist/memory/index.cjs",
      "types": "./dist/memory/index.d.ts"
    },
    "./storage": {
      "import": "./dist/storage/index.js",
      "require": "./dist/storage/index.cjs",
      "types": "./dist/storage/index.d.ts"
    }
  }
}